<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:sec="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/security
       http://www.springframework.org/schema/security/spring-security.xsd">

    <sec:http authentication-manager-ref="in-memory-auth">
        <sec:intercept-url pattern="/secured" access="hasRole('ROLE_ADMIN')" />

        <sec:form-login login-page="/loginPage"
                        default-target-url="/"
                        authentication-failure-url="/loginError" />
        <sec:logout logout-success-url="/" />
    </sec:http>

    <sec:authentication-manager id="in-memory-auth">
        <sec:authentication-provider>
            <sec:password-encoder hash="bcrypt" />
            <sec:user-service>
                <sec:user name="dominik" authorities="ROLE_ADMIN" password="$2a$04$MxmpUuzUeLIYJ.iew2/LxeTxTUnx0FPlDUPH.Ta7GrgzSMNJY733u" />
            </sec:user-service>
        </sec:authentication-provider>
    </sec:authentication-manager>

    <sec:authentication-manager id="jdbc-auth">
        <sec:authentication-provider>
            <sec:password-encoder hash="bcrypt" />
            <!-- The authenticationDataSource is declared in the spring-web-config.xml -->
            <!-- This is to have a seperation of bean declarations and security stuff only! -->
            <sec:jdbc-user-service data-source-ref="authenticationDataSource"
                                   users-by-username-query="SELECT Username, Password, enabled FROM User WHERE Username = ?"
                                   authorities-by-username-query="SELECT Username, Role FROM UserRole WHERE Username = ?" />
        </sec:authentication-provider>
    </sec:authentication-manager>
</beans>